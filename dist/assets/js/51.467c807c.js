(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{340:function(t,r,v){"use strict";v.r(r);var p=v(14),a=Object(p.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"什么是typescript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是typescript"}},[t._v("#")]),t._v(" 什么是TypeScript")]),t._v(" "),r("blockquote",[r("p",[t._v("添加了类型系统的JavaScript，适用于任何规模的项目。")])]),t._v(" "),r("h2",{attrs:{id:"typescript-的特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript-的特性"}},[t._v("#")]),t._v(" TypeScript 的特性")]),t._v(" "),r("p",[t._v("从TypeScript的名字可以看出，"),r("strong",[t._v("类型")]),t._v("是其最核心的特性。")]),t._v(" "),r("p",[t._v("我们知道JavaScript是一门非常灵活的语言")]),t._v(" "),r("ul",[r("li",[t._v("没有类型约束，一个变量初始化是字符串，再次赋值还可以是数字。")]),t._v(" "),r("li",[t._v("由于隐式类型转换的存在，有的变量的类型很难再运行前就确定。")]),t._v(" "),r("li",[t._v("基于原型的面向对象变成，是的原型原型原型上的属性和方法可以再运行时就被修改。")]),t._v(" "),r("li",[t._v("函数是JavaScript中的一等公民，可以赋值给变量，也可以当作参数或返回值。")])]),t._v(" "),r("p",[t._v("这种灵活性就像一把双刃剑，一方面使得 JavaScript 蓬勃发展，无所不能，从 2013 年开始就一直蝉联最普遍使用的编程语言排行榜冠军；另一方面也使得它的代码质量参差不齐，维护成本高，运行时错误多。")]),t._v(" "),r("p",[t._v("而 TypeScript 的类型系统，在很大程度上弥补了 JavaScript 的缺点。")]),t._v(" "),r("h2",{attrs:{id:"typescript是静态类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript是静态类型"}},[t._v("#")]),t._v(" TypeScript是静态类型")]),t._v(" "),r("p",[t._v("类型系统按照"),r("strong",[t._v("类型检查的时机")]),t._v("来分类，可以分为"),r("strong",[t._v("动态类型")]),t._v("和"),r("strong",[t._v("静态类型")]),t._v("。")]),t._v(" "),r("p",[t._v("动态类型是指在运行时才会进行类型检查，这种语言的类型错误往往会导致运行时错误。JavaSctipt是一门解释型语言，没有编译阶段，所以他是动态类型。")])])}),[],!1,null,null,null);r.default=a.exports}}]);